<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Hash Analyzer</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>
    <script>
        // Configure Tailwind with custom theme
        window.tailwind = {
            config: {
                theme: {
                    extend: {
                        colors: {
                            dark: '#111827',
                            light: '#f3f4f6',
                            primary: '#1e40af',
                            'primary-hover': '#1d4ed8',
                            accent: '#3b82f6',
                            'gray-800': '#1f2937',
                            'gray-700': '#374151',
                            'gray-600': '#4b5563'
                        },
                        animation: {
                            'fade-in': 'fadeIn 0.5s ease-in-out',
                            'spin': 'spin 1s linear infinite'
                        }
                    }
                }
            }
        }
    </script>
    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .drag-over {
            border-color: #3b82f6 !important;
            background-color: rgba(59, 130, 246, 0.1) !important;
        }
    </style>
</head>
<body class="bg-dark text-light min-h-screen font-sans">
    <div class="container mx-auto px-4 py-8 max-w-4xl">
        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-4xl font-bold mb-2">File Hash Analyzer</h1>
            <p class="text-gray-400">Upload any file to generate comprehensive hash reports</p>
        </div>

        <!-- Main Content Panel -->
        <div class="bg-gray-800 rounded-2xl p-8 shadow-xl">
            <!-- File Upload Area -->
            <div id="upload-area" class="border-2 border-dashed border-gray-700 rounded-xl p-8 text-center mb-8 transition-all duration-300 hover:border-accent cursor-pointer">
                <div id="upload-content">
                    <svg class="mx-auto h-12 w-12 text-accent mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                    </svg>
                    <h3 class="text-xl font-semibold mb-2">Drop files here or click to browse</h3>
                    <p class="text-gray-400 mb-4">Any file type is supported</p>
                    <button id="browse-btn" class="bg-primary hover:bg-primary-hover text-white px-6 py-2 rounded-lg transition-colors duration-200">
                        Browse Files
                    </button>
                </div>
                <input type="file" id="file-input" class="hidden" accept="*">
            </div>

            <!-- File Info Display -->
            <div id="file-info" class="hidden bg-gray-700 rounded-lg p-4 mb-6 animate-fade-in">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-3">
                        <svg class="h-8 w-8 text-accent" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                        <div>
                            <p id="file-name" class="font-semibold text-light"></p>
                            <p id="file-size" class="text-sm text-gray-400"></p>
                        </div>
                    </div>
                    <button id="clear-file" class="text-gray-400 hover:text-white transition-colors">
                        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Generate Report Button -->
            <div class="text-center mb-8">
                <button id="generate-btn" class="bg-primary hover:bg-primary-hover disabled:bg-gray-600 text-white px-8 py-3 rounded-lg font-semibold transition-colors duration-200 disabled:cursor-not-allowed" disabled>
                    <span id="btn-text">Generate Hash Report</span>
                    <svg id="loading-spinner" class="hidden inline-block ml-2 h-4 w-4 animate-spin border-2 border-white border-b-accent rounded-full"></svg>
                </button>
            </div>

            <!-- Hash Report -->
            <div id="hash-report" class="hidden space-y-6 animate-fade-in">
                <div class="border-t border-gray-700 pt-6">
                    <h2 class="text-2xl font-bold mb-6 text-center">Hash Report</h2>
                    
                    <!-- Hash Results Grid -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <!-- MD5 -->
                        <div class="bg-gray-700 rounded-lg p-4">
                            <div class="flex items-center justify-between mb-2">
                                <h3 class="font-semibold text-accent">MD5</h3>
                                <button class="copy-btn text-gray-400 hover:text-accent transition-colors" data-hash="md5">
                                    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                    </svg>
                                </button>
                            </div>
                            <p id="md5-hash" class="font-mono text-sm text-light break-all bg-gray-800 p-2 rounded"></p>
                        </div>

                        <!-- SHA-1 -->
                        <div class="bg-gray-700 rounded-lg p-4">
                            <div class="flex items-center justify-between mb-2">
                                <h3 class="font-semibold text-accent">SHA-1</h3>
                                <button class="copy-btn text-gray-400 hover:text-accent transition-colors" data-hash="sha1">
                                    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                    </svg>
                                </button>
                            </div>
                            <p id="sha1-hash" class="font-mono text-sm text-light break-all bg-gray-800 p-2 rounded"></p>
                        </div>

                        <!-- SHA-256 -->
                        <div class="bg-gray-700 rounded-lg p-4">
                            <div class="flex items-center justify-between mb-2">
                                <h3 class="font-semibold text-accent">SHA-256</h3>
                                <button class="copy-btn text-gray-400 hover:text-accent transition-colors" data-hash="sha256">
                                    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                    </svg>
                                </button>
                            </div>
                            <p id="sha256-hash" class="font-mono text-sm text-light break-all bg-gray-800 p-2 rounded"></p>
                        </div>

                        <!-- SHA-512 -->
                        <div class="bg-gray-700 rounded-lg p-4">
                            <div class="flex items-center justify-between mb-2">
                                <h3 class="font-semibold text-accent">SHA-512</h3>
                                <button class="copy-btn text-gray-400 hover:text-accent transition-colors" data-hash="sha512">
                                    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                    </svg>
                                </button>
                            </div>
                            <p id="sha512-hash" class="font-mono text-sm text-light break-all bg-gray-800 p-2 rounded"></p>
                        </div>
                    </div>

                    <!-- Additional File Info -->
                    <div class="mt-6 bg-gray-700 rounded-lg p-4">
                        <h3 class="font-semibold text-accent mb-3">File Information</h3>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                            <div>
                                <span class="text-gray-400">File Type:</span>
                                <span id="file-type" class="ml-2 font-mono"></span>
                            </div>
                            <div>
                                <span class="text-gray-400">Size:</span>
                                <span id="file-size-report" class="ml-2 font-mono"></span>
                            </div>
                            <div>
                                <span class="text-gray-400">Last Modified:</span>
                                <span id="file-modified" class="ml-2 font-mono"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Toast Notification -->
        <div id="toast" class="fixed top-4 right-4 bg-green-600 text-white px-4 py-2 rounded-lg shadow-lg hidden transform transition-all duration-300">
            Hash copied to clipboard!
        </div>
    </div>

    <script>
        let selectedFile = null;
        let hashResults = {};

        // DOM elements
        const uploadArea = document.getElementById('upload-area');
        const fileInput = document.getElementById('file-input');
        const browseBtn = document.getElementById('browse-btn');
        const fileInfo = document.getElementById('file-info');
        const fileName = document.getElementById('file-name');
        const fileSize = document.getElementById('file-size');
        const clearFileBtn = document.getElementById('clear-file');
        const generateBtn = document.getElementById('generate-btn');
        const btnText = document.getElementById('btn-text');
        const loadingSpinner = document.getElementById('loading-spinner');
        const hashReport = document.getElementById('hash-report');
        const toast = document.getElementById('toast');

        // Event listeners
        browseBtn.addEventListener('click', () => fileInput.click());
        fileInput.addEventListener('change', handleFileSelect);
        clearFileBtn.addEventListener('click', clearFile);
        generateBtn.addEventListener('click', generateHashes);

        // Drag and drop functionality
        uploadArea.addEventListener('dragover', handleDragOver);
        uploadArea.addEventListener('dragleave', handleDragLeave);
        uploadArea.addEventListener('drop', handleDrop);

        // Copy button functionality
        document.addEventListener('click', function(e) {
            if (e.target.closest('.copy-btn')) {
                const hashType = e.target.closest('.copy-btn').getAttribute('data-hash');
                copyToClipboard(hashResults[hashType]);
            }
        });

        function handleDragOver(e) {
            e.preventDefault();
            uploadArea.classList.add('drag-over');
        }

        function handleDragLeave(e) {
            e.preventDefault();
            uploadArea.classList.remove('drag-over');
        }

        function handleDrop(e) {
            e.preventDefault();
            uploadArea.classList.remove('drag-over');
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                handleFile(files[0]);
            }
        }

        function handleFileSelect(e) {
            const file = e.target.files[0];
            if (file) {
                handleFile(file);
            }
        }

        function handleFile(file) {
            selectedFile = file;
            fileName.textContent = file.name;
            fileSize.textContent = formatFileSize(file.size);
            fileInfo.classList.remove('hidden');
            generateBtn.disabled = false;
            hashReport.classList.add('hidden');
        }

        function clearFile() {
            selectedFile = null;
            fileInput.value = '';
            fileInfo.classList.add('hidden');
            generateBtn.disabled = true;
            hashReport.classList.add('hidden');
        }

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        async function generateHashes() {
            if (!selectedFile) return;

            // Show loading state
            generateBtn.disabled = true;
            btnText.textContent = 'Generating Hashes...';
            loadingSpinner.classList.remove('hidden');

            try {
                const buffer = await selectedFile.arrayBuffer();
                const wordArray = CryptoJS.lib.WordArray.create(buffer);

                // Generate all hashes
                hashResults = {
                    md5: CryptoJS.MD5(wordArray).toString(),
                    sha1: CryptoJS.SHA1(wordArray).toString(),
                    sha256: CryptoJS.SHA256(wordArray).toString(),
                    sha512: CryptoJS.SHA512(wordArray).toString()
                };

                // Display results
                document.getElementById('md5-hash').textContent = hashResults.md5;
                document.getElementById('sha1-hash').textContent = hashResults.sha1;
                document.getElementById('sha256-hash').textContent = hashResults.sha256;
                document.getElementById('sha512-hash').textContent = hashResults.sha512;

                // Update file info
                document.getElementById('file-type').textContent = selectedFile.type || 'Unknown';
                document.getElementById('file-size-report').textContent = formatFileSize(selectedFile.size);
                document.getElementById('file-modified').textContent = new Date(selectedFile.lastModified).toLocaleString();

                // Show report
                hashReport.classList.remove('hidden');

            } catch (error) {
                console.error('Error generating hashes:', error);
                alert('Error generating hashes. Please try again.');
            } finally {
                // Reset button state
                generateBtn.disabled = false;
                btnText.textContent = 'Generate Hash Report';
                loadingSpinner.classList.add('hidden');
            }
        }

        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(() => {
                showToast();
            }).catch(err => {
                console.error('Failed to copy: ', err);
            });
        }

        function showToast() {
            toast.classList.remove('hidden');
            setTimeout(() => {
                toast.classList.add('hidden');
            }, 2000);
        }
    </script>
</body>
</html>
